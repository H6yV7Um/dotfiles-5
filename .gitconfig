[user]
  name = hotoo
  email = hotoo.cn@gmail.com
[merge]
  ;tool = extMerge
	tool = vimdiff
	conflictstyle = diff3
  ;tool = /usr/local/bin/gitdiff
[mergetools "extMerge"]
  cmd = extMerge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  trustExitCode = false
[diff]
  ;external = /usr/local/bin/gitdiff
[pager]
  diff =
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = true
  pager = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  co = checkout
  br = branch
  ci = commit
  st = status
  amend = commit --amend
  last = log -1 HEAD
  tags = tag -n1 -l
  staged = diff --cached
  unci = !git reset --mixed HEAD^ && git fsck --lost-found
  ;unci = !git reset --mixed HEAD^ && git fsck --lost-found && git reflog expire --expire-unreachable=0 --all && git gc --prune=0 && git fsck --lost-found
  unstage = reset HEAD --
  ;svnrevert = checkout --
  changes = log --oneline --reverse
  w = whatchanged
  pyc = !$(find . -name '*.pyc' | xargs rm -rf)
  graph = log --graph --oneline --decorate
  lg = log --graph  --abbrev-commit --date=short --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%Cblue@%an%Creset%Cgreen %cr) %C(black)%ad%Creset'
  info = config --list
  summary = log --oneline
  pop = !git stash apply && git stash clear
  gitkconflict = !gitk --left-right HEAD...MERGE_HEAD
  # prune all tracking local branches that have been removed from remote:
  prune-all = !git remote | xargs -n 1 git remote prune
  # show full history in gitk (including "deleted" branches and stashes)
  history-all = !gitk --all $( git fsck | awk '/dangling commit/ {print $3}' )
  # show list of contributors in descending order by number of commits
  rank = shortlog -sn --no-merges
  # given a string for an author, try to figure out full name and email:
  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
  # given any git object, try to show it briefly
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  searchcommits = "!f() { query=\"$1\"; shift; git log -S\"$query\" \"$@\"; }; f \"$@\""
[push]
	default = simple
;[init]
  ;templatedir = /Users/hotoo/.git-template
[diff]
	tool = vimdiff
[difftool]
	prompt = No
[mergetool]
	prompt = false
[core]
	editor = /usr/bin/vim
